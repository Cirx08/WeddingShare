@model List<GalleryModel>
@using WeddingShare.Views.Admin
@using WeddingShare.Models.Database
@inject WeddingShare.Helpers.IConfigHelper _config
@inject WeddingShare.Helpers.IGalleryHelper _gallery
@inject WeddingShare.Helpers.IEncryptionHelper _encryption
@inject WeddingShare.Helpers.IFileHelper _file
@inject WeddingShare.Helpers.IUrlHelper _url

@if (Model != null && Model.Any())
{
    <table class="table table-rounded-border">
        <tr>
            <th class="col-5 col-md-3">@_localizer["Name"].Value</th>
            <th class="col-1 d-none d-md-table-cell">@_localizer["Total"].Value</th>
            <th class="col-1 d-none d-md-table-cell">@_localizer["Approved"].Value</th>
            <th class="col-1 d-none d-md-table-cell">@_localizer["Pending"].Value</th>
            <th class="col-1 d-none d-md-table-cell">@_localizer["Key"].Value</th>
            <th class="col-2 d-none d-md-table-cell">@_localizer["Space_Percent_Used"].Value</th>
            <th class="col-7 col-md-3">@_localizer["Actions"].Value</th>
        </tr>
        @foreach (var gallery in Model.OrderBy(x => string.Equals("All", x.Name, StringComparison.OrdinalIgnoreCase) ? 0 : string.Equals("default", x.Name, StringComparison.OrdinalIgnoreCase) ? 1 : 2))
        {
            var append = new List<KeyValuePair<string, string>>()
            {
                new KeyValuePair<string, string>("id", gallery.Name)
            };

            var secretKey = await _gallery.GetSecretKey(gallery.Name);
            if (!string.IsNullOrWhiteSpace(secretKey))
            {
                var enc = _encryption.IsEncryptionEnabled();
                append.Add(new KeyValuePair<string, string>("key", enc ? _encryption.Encrypt(secretKey) : secretKey));
                append.Add(new KeyValuePair<string, string>("enc", enc.ToString().ToLower()));
            }

            <tr data-gallery-id="@gallery.Id" data-gallery-name="@gallery.Name" data-gallery-key="@secretKey">
                <td class="gallery-name text-capitalize">@gallery.Name</td>
                <td class="d-none d-md-table-cell text-center">@gallery.TotalItems</td>
                <td class="d-none d-md-table-cell text-center">@gallery.ApprovedItems</td>
                <td class="d-none d-md-table-cell text-center">@gallery.PendingItems</td>
                <td class="d-none d-md-table-cell text-center">
                    <i class="fa-solid @(!string.IsNullOrWhiteSpace(secretKey) ? "fa-lock" : "fa-lock-open") m-0"></i>
                </td>
                <td class="d-none d-md-table-cell text-center">
                    @(gallery.Name.Equals("all", StringComparison.OrdinalIgnoreCase) ? _file.BytesToHumanReadable(gallery.TotalGallerySize) : $"{_file.BytesToHumanReadable(gallery.TotalGallerySize)} ({gallery.CalculateUsage(_gallery.GetConfig(gallery.Name, "Gallery:Max_Size_Mb", long.MaxValue))})")
                </td>
                <td>
                    <i class="btnOpenGallery btn btn-outline-primary fa-solid fa-up-right-from-square" data-url="@_url.GenerateFullUrl(Context?.Request, "/Gallery", append)" data-target="@(_config.GetOrDefault("Settings:Links_Open_New_Tab", true) ? "_blank" : "_self")" alt="Open"></i>
                    <i class="btnDownloadGallery btn @(gallery.TotalItems > 0 ? "btn-outline-primary" : "btn-outline-disabled") fa-solid fa-download" alt="Download" @(gallery.TotalItems == 0 ? "disabled=disabled" : string.Empty)></i>
                    <i class="btn @(gallery.Id > 1 ? "btnEditGallery btn-outline-success" : "btn-outline-disabled") fa-solid fa-pen-to-square" alt="Edit"></i>
                    <i class="btn @(gallery.Id > 0 && gallery.TotalItems > 0 ? "btnWipeGallery btn-outline-danger" : "btn-outline-disabled") fa-solid fa-broom" alt="Wipe" @(gallery.TotalItems == 0 ? "disabled=disabled" : string.Empty)></i>
                    <i class="btn @(gallery.Id > 1 ? "btnDeleteGallery btn-outline-danger" : "btn-outline-disabled") fa-solid fa-trash-can" alt="Delete"></i>
                </td>
            </tr>
        }
    </table>
}