@model WeddingShare.Models.PhotoGallery
@using System.Text
@using WeddingShare.Constants
@using WeddingShare.Helpers
@using WeddingShare.Views.Gallery
@inject WeddingShare.Helpers.IUrlHelper _url

@{
    var userPermissions = User?.Identity?.GetUserPermissions() ?? new Permissions();
    var qrCodeEnabled = await _settings.GetOrDefault(Settings.Gallery.QRCode.Enabled, true, Model?.Gallery?.Id);
    var excludeFromUrls = new List<string>() { "partial" };
}

@if (qrCodeEnabled)
{
    <div class="row mb-4">
        <div class="col-12 text-center">
            <div id="qrcode"></div>
            <div id="qrcode-download" class="d-none"></div>
            <h6>@_localizer["Share_Code"].Value</h6>
            <script>
                document.addEventListener('DOMContentLoaded', function () {
                    if ($('#qrcode').length > 0 && $('#qrcode').is(':visible')) {
                        $(function () {
                            $('#qrcode').qrcode({ width: 150, height: 150, text: '@Html.Raw(ViewBag.QRCodeLink)' });
                            $('#qrcode-download').qrcode({ width: 1000, height: 1000, text: '@Html.Raw(ViewBag.QRCodeLink)' });
                        });
                    }
                }, false);
            </script>
        </div>
    </div>
}

@if (Model.ViewMode != ViewMode.Slideshow || !(ViewBag.IsMobile ?? false))
{
    <div class="row px-4 mb-4 presentation-hidden">
        <div class="col-12 px-2 px-xl-0">
            @if (User?.Identity != null && User.Identity.IsAuthenticated && !Model.Gallery.Identifier.Equals("All", StringComparison.OrdinalIgnoreCase) && (User.Identity.IsPrivilegedUser() || User.Identity.GetUserId() == Model.Gallery.Owner))
            {
                @if (userPermissions.Settings.HasFlag(SettingsPermissions.Gallery_Update))
                {
                    <div class="btn-group w-100 mb-2">
                        <button class="btnGallerySettings btn btn-danger btn-sm" type="button" data-gallery-name="@Model?.Gallery?.Name" data-gallery-id="@Model?.Gallery?.Id">
                            @_localizer["Settings"].Value
                        </button>
                    </div>
                }
                else if (userPermissions.Features.HasFlag(FeaturePermissions.UpgradeToUnlock))
                {
                    <div class="btn-group w-100 mb-2">
                        <button class="btn btn-danger btn-sm" type="button" onclick="upgradeToUnlock();">
                            @_localizer["Settings"].Value
                        </button>
                    </div>
                }
            }

            @if (await _settings.GetOrDefault(Settings.Gallery.ShowFilters, true, Model?.Gallery?.Id))
            {
                @if (qrCodeEnabled)
                {
                    <div class="btn-group w-100 mb-2">
                        <button class="btnSaveQRCode btn btn-primary btn-sm" type="button" data-gallery-name="@Model?.Gallery?.Name">
                            @_localizer["Save_QR"].Value
                        </button>
                    </div>
                }

                <div class="btn-group w-100 mb-2">
                    <button class="btn btn-primary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        @_localizer["View"].Value
                    </button>
                    <div class="dropdown-menu">
                        @foreach (ViewMode mode in Enum.GetValues(typeof(ViewMode)))
                        {
                            var append = new List<KeyValuePair<string, string>>()
                            {
                                new KeyValuePair<string, string>("mode", ((int)mode).ToString())
                            };
                            <a class="dropdown-item" href="@_url.GenerateFullUrl(Context.Request, Context.Request.Path, append, excludeFromUrls)">@_localizer[mode.ToString()].Value</a>
                        }
                    </div>
                </div>

                <div class="btn-group w-100 mb-2">
                    <button class="btn btn-primary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        @_localizer["Group"].Value
                    </button>
                    <div class="dropdown-menu">
                        @foreach (GalleryGroup group in (Enum.GetValues(typeof(GalleryGroup)).Cast<GalleryGroup>().OrderBy(x => x == GalleryGroup.None ? 0 : 1).ThenBy(x => x.ToString())))
                        {
                            var append = new List<KeyValuePair<string, string>>()
                            {
                                new KeyValuePair<string, string>("group", ((int)group).ToString())
                            };
                            <a class="dropdown-item" href="@_url.GenerateFullUrl(Context.Request, Context.Request.Path, append, excludeFromUrls)">@_localizer[group.ToString()].Value</a>
                        }
                    </div>
                </div>

                <div class="btn-group w-100 mb-2">
                    <button class="btn btn-primary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        @_localizer["Sort"].Value
                    </button>
                    <div class="dropdown-menu">
                        @foreach (GalleryOrder order in Enum.GetValues(typeof(GalleryOrder)))
                        {
                            var append = new List<KeyValuePair<string, string>>()
                            {
                                new KeyValuePair<string, string>("order", ((int)order).ToString())
                            };
                            <a class="dropdown-item" href="@_url.GenerateFullUrl(Context.Request, Context.Request.Path, append, excludeFromUrls)">@_localizer[order.ToString()].Value</a>
                        }
                    </div>
                </div>

                <div class="btn-group w-100 mb-2">
                    <button class="btn btn-primary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        @_localizer["Filter"].Value
                    </button>
                    <div class="dropdown-menu">
                        @foreach (GalleryFilter filter in (Enum.GetValues(typeof(GalleryFilter))).Cast<GalleryFilter>().OrderBy(x => x == GalleryFilter.All ? 0 : 1).ThenBy(x => x.ToString()))
                        {
                            var append = new List<KeyValuePair<string, string>>()
                            {
                                new KeyValuePair<string, string>("filter", ((int)filter).ToString())
                            };
                            <a class="dropdown-item" href="@_url.GenerateFullUrl(Context.Request, Context.Request.Path, append, excludeFromUrls)">@_localizer[filter.ToString()].Value</a>
                        }
                    </div>
                </div>
            }

            @if (await _settings.GetOrDefault(Settings.Gallery.Download, true, Model?.Gallery?.Id) || (User?.Identity != null && User.Identity.IsAuthenticated))
            {
                <div class="btn-group w-100 mb-2">
                    <button class="btnDownloadGallery btn btn-primary btn-sm" type="button" data-gallery-id="@Model?.Gallery?.Id" data-gallery-name="@Model?.Gallery?.Name" data-gallery-key="@Model?.SecretKey">
                        @_localizer["Download"].Value
                    </button>
                </div>
            }
        </div>
    </div>
}