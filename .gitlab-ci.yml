image: mcr.microsoft.com/dotnet/sdk:latest

stages:
  - test
  - build
  - push
  - release
  
variables:
  BUILD_CONFIGURATION: 'Release'
  OBJECTS_DIRECTORY: 'obj'
  NUGET_PACKAGES_DIRECTORY: '.nuget'
  SOURCE_CODE_PATH: '*/*/'
  
cache:
  key: "$CI_JOB_STAGE-$CI_COMMIT_REF_SLUG"
  paths:
    - '$SOURCE_CODE_PATH$OBJECTS_DIRECTORY/project.assets.json'
    - '$SOURCE_CODE_PATH$OBJECTS_DIRECTORY/*.csproj.nuget.*'
    - '$NUGET_PACKAGES_DIRECTORY'
  policy: pull-push

before_script:
  - 'docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY'
#  - 'docker buildx rm --all-inactive --force'
#  - 'docker buildx create --name wedding-share-builder --driver=docker-container'
  
test:
  stage: test
  script:
    - 'dotnet restore'
    - 'dotnet test'
    
push_pre_release:
  variables:
    GIT_STRATEGY: none
  stage: push
  only:
    - /^(prerel|rc|release)-[0-9]+\.[0-9]+\.[0-9]+$/
  script:
    - 'docker buildx build --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH --tag $CI_REGISTRY_IMAGE:pre_release --platform linux/arm/v7,linux/arm64/v8,linux/amd64 --builder wedding-share-builder --push -f WeddingShare/Dockerfile .'
  needs:
    - test

push_latest:
  variables:
    GIT_STRATEGY: none
  stage: push
  only:
    - main
    - master
  script:
    - 'docker buildx build --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH --tag $CI_REGISTRY_IMAGE:latest --platform linux/arm/v7,linux/arm64/v8,linux/amd64 --builder wedding-share-builder --push -f WeddingShare/Dockerfile .'
  needs:
    - test
    
push_tag:
  variables:
    GIT_STRATEGY: none
  stage: push
  only:
    - tags
  script:
    - 'docker buildx build --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME --platform linux/arm/v7,linux/arm64/v8,linux/amd64 --builder wedding-share-builder --push -f WeddingShare/Dockerfile .'
  needs:
    - test

push_docker_hub:
  variables:
    GIT_STRATEGY: none
  stage: push
  only:
    - tags
  script:
    - 'docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_TOKEN'
    - 'docker buildx build --tag $DOCKERHUB_USERNAME/wedding_share:$CI_COMMIT_REF_NAME --tag $DOCKERHUB_USERNAME/wedding_share:latest --platform linux/arm/v7,linux/arm64/v8,linux/amd64 --builder wedding-share-builder --push -f WeddingShare/Dockerfile .'
  needs:
    - test